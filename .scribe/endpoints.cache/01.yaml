## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"The Night Manager","email":"manager@manager.com","email_verified_at":null,"is_manager":true,"created_at":"2024-08-28T21:10:43.000000Z","updated_at":"2024-08-28T21:10:43.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/V1/tickets
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Tempore consectetur nam hic similique sapiente.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: C
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: 'Must be 11.'
        required: true
        example: '11'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: rerum
          description: 'Tempore consectetur nam hic similique sapiente.'
          status: C
        relationships:
          author:
            data:
              id: '11'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/V1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":2,"attibutes":{"title":"ut maxime commodi","description":"Et incidunt mollitia et. Rerum cupiditate et qui totam adipisci ullam. Distinctio sint architecto accusamus dolores.","status":"X","createdAt":"2024-08-28T21:10:31.000000Z","updatedAt":"2024-08-28T21:10:31.000000Z"},"relationships":{"author":{"data":{"type":"user","id":10},"links":{"self":"http:\/\/localhost\/api\/V1\/authors\/10"}}},"links":{"self":"http:\/\/localhost\/api\/V1\/tickets\/2"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/V1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/V1/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: neque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Omnis dolores nihil quasi sint labore atque vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: C
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: neque
          description: 'Omnis dolores nihil quasi sint labore atque vel.'
          status: C
        relationships:
          author:
            data:
              id: 20
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/V1/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Ea hic necessitatibus voluptas et iste aut similique.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: A
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: at
          description: 'Ea hic necessitatibus voluptas et iste aut similique.'
          status: A
        relationships:
          author:
            data:
              id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/V1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Manley Hills","email":"bernhard.jacklyn@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/1"}},{"type":"user","id":2,"attributes":{"name":"Mr. Nikko Rath PhD","email":"hill.ryley@example.org","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/2"}},{"type":"user","id":3,"attributes":{"name":"Katlyn Bins","email":"owen.homenick@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/3"}},{"type":"user","id":4,"attributes":{"name":"Ricky Erdman","email":"jborer@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/4"}},{"type":"user","id":5,"attributes":{"name":"Miss Alda Bernier","email":"howe.bartholome@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/5"}},{"type":"user","id":6,"attributes":{"name":"Dr. Niko O''Connell Sr.","email":"kozey.edgar@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/6"}},{"type":"user","id":7,"attributes":{"name":"Titus Lemke","email":"erna34@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/7"}},{"type":"user","id":8,"attributes":{"name":"Mrs. Vivian Bergstrom","email":"johns.sandra@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/8"}},{"type":"user","id":9,"attributes":{"name":"Keeley Barton","email":"antonio.vonrueden@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/9"}},{"type":"user","id":10,"attributes":{"name":"Miss Virgie Von I","email":"rschamberger@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/10"}},{"type":"user","id":11,"attributes":{"name":"The Night Manager","email":"manager@manager.com","isManager":true},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/11"}},{"type":"user","id":14,"attributes":{"name":"The Best Name","email":"email@emails.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/14"}},{"type":"user","id":16,"attributes":{"name":"The Best Name","email":"email@emailds.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/16"}}],"links":{"first":"http:\/\/localhost\/api\/V1\/users?page=1","last":"http:\/\/localhost\/api\/V1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/V1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/V1\/users","per_page":15,"to":13,"total":13}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/V1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: chomenick@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '!ta$*N,dj9>EQ>"'''
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: autem
          email: chomenick@example.net
          isManager: true
          password: '!ta$*N,dj9>EQ>"'''
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/V1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Manley Hills","email":"bernhard.jacklyn@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/V1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/V1/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: rodger.mueller@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: 8TE$qr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: ipsam
          email: rodger.mueller@example.net
          isManager: false
          password: 8TE$qr
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/V1/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: genoveva.willms@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: u;kr@4Bvza
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: itaque
          email: genoveva.willms@example.net
          isManager: false
          password: u;kr@4Bvza
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/V1/authors
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Manley Hills","email":"bernhard.jacklyn@example.com","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/1"}},{"type":"user","id":2,"attributes":{"name":"Mr. Nikko Rath PhD","email":"hill.ryley@example.org","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/2"}},{"type":"user","id":3,"attributes":{"name":"Katlyn Bins","email":"owen.homenick@example.net","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/3"}},{"type":"user","id":4,"attributes":{"name":"Ricky Erdman","email":"jborer@example.net","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/4"}},{"type":"user","id":5,"attributes":{"name":"Miss Alda Bernier","email":"howe.bartholome@example.com","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/5"}},{"type":"user","id":6,"attributes":{"name":"Dr. Niko O''Connell Sr.","email":"kozey.edgar@example.com","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/6"}},{"type":"user","id":7,"attributes":{"name":"Titus Lemke","email":"erna34@example.net","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:31.000000Z","updatedAt":"2024-08-28T21:10:31.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/7"}},{"type":"user","id":8,"attributes":{"name":"Mrs. Vivian Bergstrom","email":"johns.sandra@example.net","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:31.000000Z","updatedAt":"2024-08-28T21:10:31.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/8"}},{"type":"user","id":9,"attributes":{"name":"Keeley Barton","email":"antonio.vonrueden@example.com","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:31.000000Z","updatedAt":"2024-08-28T21:10:31.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/9"}},{"type":"user","id":10,"attributes":{"name":"Miss Virgie Von I","email":"rschamberger@example.net","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:31.000000Z","updatedAt":"2024-08-28T21:10:31.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/10"}}],"links":{"first":"http:\/\/localhost\/api\/V1\/authors?page=1","last":"http:\/\/localhost\/api\/V1\/authors?page=7","prev":null,"next":"http:\/\/localhost\/api\/V1\/authors?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/V1\/authors?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/V1\/authors","per_page":15,"to":10,"total":103}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/V1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Manley Hills","email":"bernhard.jacklyn@example.com","isManager":false,"emailVerifiedAt":"2024-08-28T21:10:30.000000Z","createdAt":"2024-08-28T21:10:30.000000Z","updatedAt":"2024-08-28T21:10:30.000000Z"},"links":{"self":"http:\/\/localhost\/api\/V1\/users\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/V1/authors/{author_id}/tickets'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/V1\/authors\/corporis\/tickets?page=1","last":"http:\/\/localhost\/api\/V1\/authors\/corporis\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/V1\/authors\/corporis\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/V1\/authors\/corporis\/tickets","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/V1/authors/{author_id}/tickets'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: repellendus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'A earum enim distinctio voluptatem ad voluptatem voluptas.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      author:
        name: author
        description: 'Must be 11.'
        required: true
        example: '11'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: nostrum
          description: 'A earum enim distinctio voluptatem ad voluptatem voluptas.'
          status: X
      author: '11'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/V1/authors/{author_id}/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: molestias
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/V1/authors/{author}/tickets/{ticket}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author: ab
      ticket: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Ullam et corrupti saepe autem animi unde libero harum.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: quo
          description: 'Ullam et corrupti saepe autem animi unde libero harum.'
          status: X
        relationships:
          author:
            data:
              id: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/V1/authors/{author}/tickets/{ticket}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author: recusandae
      ticket: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Corrupti ab libero non.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: consequuntur
          description: 'Corrupti ab libero non.'
          status: X
        relationships:
          author:
            data:
              id: 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/V1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"The Night Manager","email":"manager@manager.com","email_verified_at":null,"is_manager":true,"created_at":"2024-08-28T21:10:43.000000Z","updated_at":"2024-08-28T21:10:43.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|tZtIcgGcMlAY5eIIM5Ut6UjADsYmctqjNZWYIR2f9405fcca'
    controller: null
    method: null
    route: null
    custom: []
